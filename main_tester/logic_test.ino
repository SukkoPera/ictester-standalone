//TTL 74 tester
//EXPERIMENTAL
//MCbx 2017

//Please update me after writing script!
const PROGMEM unsigned long chips1[]={7400, 74000, 7401, 7402, 7403, 74040506, 7407, 740809, 7410, 7411, 7412, 7413, 7414, 7415, 7416, 
                                       7417, 7418, 7419, 7420, 7421, 7422, 7427, 7430, 7432, 7438, 7442, 7445, 7450, 7451, 7474,
                                       7485, 7486, 7495, 74125,74126,74132,74138,74139,74145,74147,74151,74153,74156,74161,74164,
                                       74165,74174,74175,74193,74240,74243,74244,74245,74251,74253,74257,74273,74299,74365,74373,
                                       74374,74393,74541,74027,8216, 8286, 74405,4011, 4012, 4013, 4015, 4016, 4024, 4027, 4040,
                                       4066, 4093, 40106};
#define chips1count 77   //me too!
 
//WRITING TEST SCRIPTS
//1. General order is the order of chips1.
//2. Script is array of longs. One long, one command. First 24 bits are used.
//3. First (0th) long is length of script with this number (eg. {3,22,33})
//4. Commands are following:
//  - 1xy - x - monitor for SW4, y - monitor for SW5 up. 3 for SW4, 5 for SW5, 7 for both
//  - 0000z - set i/o. 1 is input TO TESTER.
//  - 0001z - send states to ic
//  - 0011z - verify inputs against states
//  where z is always 20 bits of data. Rest is meaningless.
//5. After writing script, update const long* const script[] PROGMEM. Is must be this way or RAM will fill up.
// I'm giving a conv2script.pl Perl program to convert ICTester's MOD file to these numbers.

const long s001[] PROGMEM = {10,1180224, 8, 1180236, 4718888, 5899116, 2359448, 3539676, 7078328, 7078332};
const long s002[] PROGMEM = {12, 786944, 8, 786956, 1179720, 1179724, 2097288, 2359436, 4325640, 4325644, 7471560, 7471564};
const long s003[] PROGMEM = {10, 4718736, 8, 4718748, 2359880, 7078620, 1179944, 5898684, 3539816, 3539820};
const long s004[] PROGMEM = {10, 4718736, 8, 4718748, 1179944, 1179948, 2359880, 2359884, 3539816, 3539820};
const long s005[] PROGMEM = {10, 1180224, 8, 1180236, 4718888, 5899116, 2359448, 3539676, 7078328, 7078332};
const long s006[] PROGMEM = {6, 2753184, 8, 2753196, 5505368, 5505372};
const long s007[] PROGMEM = {6, 2753184, 8, 12, 5505368, 8258556};
const long s008[] PROGMEM = {10, 1180224, 8, 12, 5767528, 4718892, 2359448, 2359452, 7078328, 8258556};
const long s009[] PROGMEM = {18, 2228736, 8, 2228748, 262232, 2490972, 524456, 2753196, 786680, 3015420, 5243144, 7471884, 5505368, 7734108, 5767592, 7996332, 6029816, 6029820};
const long s010[] PROGMEM = {18, 2228736, 8, 12, 262232, 262236, 524456, 524460, 786680, 786684, 5243144, 5243148, 5505368, 5505372, 5767592, 5767596, 6029816, 8258556};
const long s011[] PROGMEM = {18, 2228736, 8, 2228748, 262232, 2490972, 524456, 2753196, 786680, 3015420, 5243144, 7471884, 5505368, 7734108, 5767592, 7996332, 6029816, 6029820};
const long s012[] PROGMEM = {34, 131584, 8, 131596, 4194568, 4326156, 2097288, 2228876, 6291848, 6423436, 524840, 655916, 4718888, 4850476, 2621608, 2753196, 6816168, 6947756, 262168, 393756, 4456728, 4588316, 2359448, 2491036, 6554008, 6685596, 786488, 918076, 4981048, 5112636, 2883768, 3015356, 7078328, 7078332};
const long s013[] PROGMEM = {6, 2753184, 8, 2753196, 5505368, 5505372};
const long s014[] PROGMEM = {18, 2228736, 8, 12, 262232, 262236, 524456, 524460, 786680, 786684, 5243144, 5243148, 5505368, 5505372, 5767592, 5767596, 6029816, 8258556};
const long s015[] PROGMEM = {6, 2753184, 8, 2753196, 5505368, 5505372};
const long s016[] PROGMEM = {6, 2753184, 8, 12, 5505368, 8258556};
const long s017[] PROGMEM = {34, 131584, 8, 131596, 4194568, 4326156, 2097288, 2228876, 6291848, 6423436, 524840, 655916, 4718888, 4850476, 2621608, 2753196, 6816168, 6947756, 262168, 393756, 4456728, 4588316, 2359448, 2491036, 6554008, 6685596, 786488, 918076, 4981048, 5112636, 2883768, 3015356, 7078328, 7078332};
const long s018[] PROGMEM = {6, 2753184, 8, 2753196, 5505368, 5505372};
const long s019[] PROGMEM = {34, 131584, 8, 131596, 4194568, 4326156, 2097288, 2228876, 6291848, 6423436, 524840, 655916, 4718888, 4850476, 2621608, 2753196, 6816168, 6947756, 262168, 393756, 4456728, 4588316, 2359448, 2491036, 6554008, 6685596, 786488, 918076, 4981048, 5112636, 2883768, 3015356, 7078328, 7078332};
const long s020[] PROGMEM = {34, 131584, 8, 12, 4194568, 4194572, 2097288, 2097292, 6291848, 6291852, 524840, 524332, 4718888, 4718892, 2621608, 2621612, 6816168, 6816172, 262168, 262172, 4456728, 4456732, 2359448, 2359452, 6554008, 6554012, 786488, 786492, 4981048, 4981052, 2883768, 2883772, 7078328, 7209916};
const long s021[] PROGMEM = {34, 131584, 8, 131596, 4194568, 4326156, 2097288, 2228876, 6291848, 6423436, 524840, 655916, 4718888, 4850476, 2621608, 2753196, 6816168, 6947756, 262168, 393756, 4456728, 4588316, 2359448, 2491036, 6554008, 6685596, 786488, 918076, 4981048, 5112636, 2883768, 3015356, 7078328, 7078332};
const long s022[] PROGMEM = {18, 2228736, 8, 2228748, 262232, 262236, 524456, 524460, 786680, 786684, 5243144, 5243148, 5505368, 5505372, 5767592, 5767596, 6029816, 6029820};
const long s023[] PROGMEM = {22, 131072, 8, 131084, 2097160, 2228236, 1048584, 1179660, 520, 131596, 264, 131340, 136, 131212, 72, 131148, 40, 131116, 24, 131100, 3146744, 3146748};
const long s024[] PROGMEM = {10, 1180224, 8, 12, 4718888, 5899116, 2359448, 3539676, 7078328, 8258556};
const long s025[] PROGMEM = {10, 1180224, 8, 1180236, 4718888, 5899116, 2359448, 3539676, 7078328, 7078332};
const long s026[] PROGMEM = {35, 3, 460784, 8, 460780, 4194312, 4655068, 2097160, 2557884, 6291464, 6752124, 1048584, 1509116, 5242888, 5703164, 3145736, 3605500, 7340040, 7735292, 524296, 854012, 4718600, 4917244, 2621448, 3082236, 6815752, 7276540, 1572872, 2033660, 5767176, 6227964, 3670024, 4130812, 7864328, 8325116};
const long s027[] PROGMEM = {35, 3, 460784, 8, 460780, 4194312, 4655068, 2097160, 2557884, 6291464, 6752124, 1048584, 1509116, 5242888, 5703164, 3145736, 3605500, 7340040, 7735292, 524296, 854012, 4718600, 4917244, 2621448, 3082236, 6815752, 7276540, 1572872, 2033660, 5767176, 6227964, 3670024, 4130812, 7864328, 8325116};
const long s028[] PROGMEM = {26, 131584, 8, 131596, 131688, 131180, 131464, 131468, 131208, 131724, 131912, 131916, 131752, 131756, 6423064, 6291996, 2884104, 2884108, 2359832, 2490908, 6816264, 6947340, 5898760, 5767692, 6816264, 6947340};
const long s029[] PROGMEM = {20, 131584, 8, 131596, 6291576, 6291580, 1835400, 1835404, 6291528, 6423116, 4194360, 4325948, 2097304, 2228892, 1573128, 1704716, 1311208, 1442284, 786856, 917932};
const long s030[] PROGMEM = {14, 393984, 4194328, 4456732, 524424, 656012, 6815928, 7864568, 8126972, 4718744, 5767384, 5898972, 4718744, 4850332};
const long s031[] PROGMEM = {11, 3, 1792, 72, 588, 8323160, 8323676, 4128856, 4129884, 8323144, 8323404};
const long s032[] PROGMEM = {10, 1180224, 8, 12, 4718888, 5899116, 2359448, 3539676, 7209976, 7078332};
const long s033[] PROGMEM = {40, 7864320, 131112, 131624, 552, 4194312, 4194316, 4456456, 4194312, 2097164, 2359304, 2097160, 1048588, 1310728, 1048584, 524300, 655944, 524872, 524296, 2097164, 7996040, 7864968, 7864328, 1048588, 1180424, 1049352, 1048584, 524300, 786456, 524312, 4194332, 4456472, 4194328, 6291484, 6553624, 6291480, 7340060, 7602184, 7340040, 3670028};
const long s034[] PROGMEM = {10, 1180224, 8, 12, 2359592, 3539820, 8258552, 8258556, 5898968, 5898972};
const long s035[] PROGMEM = {10, 1180224, 8, 1180236, 2359592, 3539820, 4718744, 4718748, 7078328, 8258556};
const long s036[] PROGMEM = {33, 3, 65536, 8, 65548, 24, 65564, 40, 65580, 72, 65612, 136, 65676, 264, 65804, 520, 66060, 66568, 66572, 131080, 196620, 262152, 327692, 524296, 589836, 1048584, 1114124, 2097160, 2162700, 4194312, 4259852, 8325112, 8259580};
const long s037[] PROGMEM = {23, 3, 8324096, 472, 8324572, 472, 8324572, 520, 4130316, 536, 6227484, 552, 7276076, 568, 7800380, 584, 8062540, 600, 8193628, 616, 8259180, 632, 8323708};
const long s038[] PROGMEM = {13, 3, 984960, 4194328, 5179292, 8, 460556, 2097192, 2819756, 1048648, 1902028, 3145832, 4064236};
const long s039[] PROGMEM = {35, 3, 460784, 8, 460780, 4194312, 4655068, 2097160, 2557884, 6291464, 6752124, 1048584, 1509116, 5242888, 5703164, 3145736, 3605500, 7340040, 7735292, 524296, 854012, 4718600, 4917244, 2621448, 3082236, 6815752, 7276540, 1572872, 2033660, 5767176, 6227964, 3670024, 4130812, 7864328, 8325116};
const long s040[] PROGMEM = {41, 3, 2164224, 1966584, 4130812, 3999736, 1837052, 1544, 1548, 132616, 198156, 2033400, 2033404, 2033528, 4063612, 2228488, 2228492, 2228616, 2294156, 4129208, 4129212, 4129240, 4064732, 2229704, 2229708, 2229736, 2295276, 4130280, 4130284, 3081720, 3015676, 2229240, 2229244, 3277816, 3343356, 3605496, 3605500, 3867640, 3803132, 4065272, 4130812};
const long s041[] PROGMEM = {37, 3, 768, 459784, 460300, 136, 396, 262216, 262476, 131112, 131372, 393240, 393500, 4259848, 4260108, 2424840, 2425100, 1245192, 1245452, 983048, 983308, 8, 524, 262152, 262668, 131080, 131596, 393224, 393740, 65544, 66060, 327688, 328204, 196616, 197132, 458760, 459276};
const long s042[] PROGMEM = {21, 3, 66560, 8, 12, 198152, 198156, 4392472, 4325916, 2097160, 2097164, 2359560, 2426124, 329000, 262444, 524456, 591020, 2163752, 2097196, 3145832, 3212396};
const long s043[] PROGMEM = {19, 3, 984960, 2097160, 3082124, 3082136, 3081116, 3081144, 3082172, 984984, 918428, 5113752, 5178268, 2032536, 1901980, 853464, 722652, 1771224, 1509212};
const long s044[] PROGMEM = {55, 3, 8126464, 197688, 197656, 197660, 197688, 2294844, 197656, 197688, 1246268, 197656, 197688, 197656, 197688, 721980, 197656, 197688, 197656, 197688, 197656, 197688, 197656, 197688, 459836, 197656, 197688, 197656, 197688, 197656, 197688, 197656, 197688, 197656, 197688, 197656, 197688, 197656, 197688, 8324156, 197672, 197688, 197692, 133080, 197688, 8324156, 132120, 197688, 197692, 133080, 197688, 8324156, 65560, 65592, 3997756};
const long s045[] PROGMEM = {42, 7865280, 8, 12, 393336, 393276, 262200, 262204, 393272, 393340, 262200, 262268, 393272, 393468, 262200, 262396, 4063288, 393724, 262200, 262652, 393272, 394236, 262200, 263164, 393272, 918524, 262200, 787452, 393272, 1967100, 262200, 1836028, 393272, 4064252, 262200, 3933180, 393272, 8258556, 262200, 8127484, 8, 12};
const long s046[] PROGMEM = {83, 3, 66560, 8, 262152, 24, 1052, 1080, 1048, 1052, 1080, 1048, 1052, 1080, 1048, 1052, 1080, 1048, 1052, 1080, 1048, 1052, 1080, 1048, 1052, 65592, 65560, 65564, 65544, 3736552, 65560, 65592, 65560, 65564, 65592, 65560, 65564, 65592, 65560, 65564, 65592, 65560, 65564, 65592, 65560, 65564, 65592, 65560, 65564, 65592, 65560, 1052, 8127944, 4195384, 4195352, 4195356, 132152, 132120, 132124, 132152, 132120, 196636, 132152, 132120, 196636, 196664, 196632, 196636, 196664, 196632, 196636, 196664, 196632, 196636, 196664, 196632, 196636, 196664, 196632, 196636, 196664, 196632, 196636};
const long s047[] PROGMEM = {39, 3, 4850976, 24, 28, 88, 65624, 24, 60, 40, 56, 28, 152, 65688, 24, 284, 792, 66328, 280, 1052, 263192, 328728, 1048, 131100, 1179672, 1245208, 131096, 524316, 2621464, 2687000, 524312, 4194332, 7602904, 7668440, 4194328, 4851004, 4850984, 4851000, 28};
const long s048[] PROGMEM = {13, 3, 6686304, 8, 65560, 24, 2359900, 1573272, 1638808, 24, 4326460, 4326440, 2359884};
const long s049[] PROGMEM = {71, 3, 1574496, 2359304, 1835880, 1835752, 1312492, 3932904, 262280, 1835148, 786824, 786568, 1835212, 786824, 786568, 1835180, 1835432, 1835176, 1835432, 1835176, 1835660, 1835912, 1835656, 1835912, 1835656, 1835912, 1835656, 1835912, 1835912, 1836428, 1836424, 1836296, 1836168, 1835756, 1836008, 1835752, 1836008, 1835752, 1836008, 1835752, 1836008, 1835752, 1836008, 1835752, 1836008, 1835752, 1836008, 1835752, 1836008, 1837036, 1836776, 1837032, 786440, 786444, 4981128, 4718984, 786824, 1835468, 1835480, 1573336, 1835480, 1836424, 1835436, 1966504, 1704360, 1835432, 1835916, 1901448, 1639304, 1835912, 1836428};
const long s050[] PROGMEM = {10, 2790720, 8, 2790732, 1919656, 1395372, 4194328, 6985052, 6283256, 8380412};
const long s051[] PROGMEM = {19, 1966080, 8, 12, 968, 1967052, 6161352, 6161356, 6160392, 6160396, 1966104, 1966108, 1967064, 1967068, 2149582816, 4194328, 4194332, 6160408, 6161372};
const long s052[] PROGMEM = {8, 2790720, 4194328, 6985052, 8, 12, 1395368, 4186092};
const long s053[] PROGMEM = {11, 8160, 40, 12, 4177928, 4186092, 4177920, 16408, 28, 8184, 4186108};
const long s054[] PROGMEM = {39, 3, 768, 8, 524, 136, 396, 262920, 262668, 262216, 262476, 131336, 131596, 131624, 131372, 393480, 393740, 393752, 393500, 65800, 66060, 4260360, 4260108, 327944, 328204, 2425352, 2425100, 196872, 197132, 1245704, 1245452, 459016, 459276, 983560, 983308, 984328, 984844, 460552, 460556};
const long s055[] PROGMEM = {21, 3, 66560, 8, 12, 4194328, 4260892, 198152, 198156, 2295304, 2228748, 2359560, 2426124, 329000, 262444, 524456, 591020, 2688168, 2621612, 3145832, 3212396};
const long s056[] PROGMEM = {13, 3, 590976, 4194312, 4785292, 8, 12, 2359592, 2950572, 24, 28, 1180248, 1771228};
const long s057[] PROGMEM = {14, 5018400, 8, 12, 3345624, 3345628, 3362008, 8380412, 24, 5018428, 16408, 16412, 8, 12};
const long s058[] PROGMEM = {90, 2035584, 4194328, 5179292, 8, 12, 464776, 4108, 20504, 53272, 4120, 7196, 39960, 7192, 69660, 102424, 69656, 4636, 37400, 4632, 135196, 167960, 135192, 4380, 20760, 53528, 1052824, 269340, 299032, 266264, 69788, 37016, 4248, 1577500, 1049112, 7344648, 6295564, 7377416, 5247496, 5771276, 5804040, 5771272, 4198540, 4231304, 4198536, 4460556, 4493320, 4460552, 4198668, 4231432, 4198664, 4329484, 4362248, 4329480, 4198924, 4231688, 4198920, 4263948, 4296712, 4263944, 4201484, 4201496, 2148542464, 4199448, 4232216, 4198424, 4200476, 4724760, 4757528, 4200472, 5247004, 2149527424, 4198408, 5771276, 2148542464, 4659096, 4691864, 4659096, 2149527424, 4198408, 4661132, 4657032, 4661128, 4198412, 4198440, 5183404, 6234056, 5183436, 6233992, 4198412};
const long s059[] PROGMEM = {7, 3, 1377600, 8, 12, 4130792, 4130796};
const long s060[] PROGMEM = {11, 5018400, 16392, 16396, 3361992, 8380396, 3345640, 8, 5018412, 24, 5018428};
const long s061[] PROGMEM = {17, 5018400, 8, 16392, 8, 12, 8, 3345608, 3361992, 3345608, 8, 5018412, 5034792, 5018408, 12, 24, 5018428};
const long s062[] PROGMEM = {48, 1967040, 8, 2097192, 8, 12, 4194328, 8, 1048652, 3145832, 1048648, 12, 4194328, 8, 4194328, 8, 4194328, 8, 1573068, 4194328, 8, 4194328, 8, 4194328, 8, 6161368, 1967048, 1835468, 6029784, 1835464, 6029784, 1835464, 6029784, 1835464, 6029784, 1835464, 6029784, 1835464, 6029784, 1835464, 6029784, 1835464, 6029784, 1835464, 1967052, 6161368, 1967048, 12};
const long s063[] PROGMEM = {26, 4177920, 4194328, 8372252, 8372232, 8372236, 4177944, 4177948, 4177928, 12, 40, 2097196, 2097224, 1048652, 1048712, 524428, 524552, 262412, 262664, 131596, 132104, 66572, 67592, 34828, 36872, 20492};
const long s064[] PROGMEM = {22, 3, 6291504, 2097196, 2163752, 4260892, 4785304, 6882492, 6815928, 2621612, 2228776, 3277416, 2097192, 4194332, 2359592, 5505368, 4194328, 2097196, 2491176, 3539816, 2097192, 4194332};
const long s065[] PROGMEM = {29, 3, 2359584, 4194376, 4194412, 4194856, 4195084, 4325640, 4587532, 5505032, 7340044, 6291464, 4194316, 4194328, 6553916, 2359592, 2151025504, 136, 2359788, 2360680, 2361132, 2425640, 2556204, 3014952, 3932460, 3408168, 2359596, 2359608, 3539836};
const long s066[] PROGMEM = {43, 4080, 8, 12, 4104, 8188, 4198392, 4194332, 2097176, 2097196, 1048616, 1048652, 524424, 524428, 262280, 262412, 131336, 131596, 66056, 66572, 33800, 34828, 2155847680, 16392, 16396, 20488, 8376332, 8372248, 4210716, 4210728, 2113580, 2113608, 1065036, 1065096, 540812, 540936, 278796, 279048, 147980, 148488, 82956, 83976, 51212};
const long s067[] PROGMEM = {23, 3, 8324096, 520, 4130316, 4130184, 8324492, 8324632, 6227484, 6227496, 7276076, 7276088, 7800380, 7800392, 8062540, 8062552, 8193628, 8193640, 8259180, 8259192, 8323708, 8323576, 8324604};
const long s068[] PROGMEM = {10, 1573056, 8, 1573068, 4457000, 6030060, 2228504, 3801564, 6685496, 6685500};
const long s069[] PROGMEM = {34, 4194320, 8, 4194332, 262408, 4456732, 524424, 4718748, 786824, 4981148, 1048648, 5242972, 1311048, 5505372, 1573064, 5767388, 1835464, 6029788, 2097192, 6291516, 2359592, 6553916, 2621608, 6815932, 2884008, 7078332, 3145832, 7340156, 3408232, 7602556, 7864552, 7864572, 3932648, 3932652};
const long s070[] PROGMEM = {8, 6291504, 131592, 4325916, 524424, 2621612, 2753160, 6947516};
const long s071[] PROGMEM = {20, 3, 1966560, 4195336, 8, 65560, 4195336, 5113068, 4260888, 4195336, 5637484, 4260888, 4195336, 5899692, 4260888, 4195336, 6030796, 6293000, 4195336, 4195340};
const long s072[] PROGMEM = {13, 1179792, 1179800, 1179804, 6292232, 6292236, 7078760, 8258556, 786528, 6292232, 6292236, 8258456, 8258556};
const long s073[] PROGMEM = {148, 3408832, 8, 12, 24, 8, 2097164, 40, 8, 12, 24, 8, 2097164, 24, 8, 1048588, 24, 8, 24, 8, 262156, 24, 8, 24, 8, 24, 8, 24, 8, 524, 24, 8, 24, 8, 24, 8, 24, 8, 24, 8, 24, 8, 24, 8, 24, 8, 268, 24, 8, 24, 8, 24, 8, 24, 8, 24, 8, 24, 8, 24, 8, 24, 8, 24, 8, 24, 8, 24, 8, 24, 8, 24, 8, 24, 8, 24, 8, 24, 8, 140, 24, 8, 24, 8, 24, 8, 24, 8, 24, 8, 24, 8, 24, 8, 24, 8, 24, 8, 24, 8, 24, 8, 24, 8, 24, 8, 24, 8, 24, 8, 24, 8, 24, 8, 24, 8, 24, 8, 24, 8, 24, 8, 24, 8, 24, 8, 24, 8, 24, 8, 24, 8, 24, 8, 24, 8, 24, 8, 24, 8, 24, 8, 24, 8, 76, 24, 8, 2097228};
const long s074[] PROGMEM = {21, 3, 6291504, 8, 2097196, 66568, 8, 4194332, 524424, 8, 2097196, 131592, 1180232, 131592, 8, 4194332, 262408, 1311048, 262408, 8, 2097196};
const long s075[] PROGMEM = {1}; //4040
const long s076[] PROGMEM = {20, 1179792, 786528, 8, 786540, 1704184, 1966332, 6292232, 6292236, 8258552, 8258556, 8, 1179792, 1179804, 786536, 1966332, 6292232, 6292236, 7078760, 8258556};
const long s077[] PROGMEM = {10, 1573056, 8, 1573068, 2228504, 3801564, 4457000, 6030060, 6685496, 6685500};
const long s078[] PROGMEM = {6, 2753184, 8, 2753196, 8258552, 5505372};
//const long s061[] PROGMEM = {};

const long* const script[] PROGMEM = { s001, s002, s003, s004, s005, s006, s007, s008, s009, s010, s011, s012, s013, s014, s015,
                                       s016, s017, s018, s019, s020, s021, s022, s023, s024, s025, s026, s027, s028, s029, s030,
                                       s031, s032, s033, s034, s035, s036, s037, s038, s039, s040, s041, s042, s043, s044, s045,
                                       s046, s047, s048, s049, s050, s051, s052, s053, s054, s055, s056, s057, s058, s059, s060, 
                                       s061, s062, s063, s064, s065, s066, s067, s068, s069, s070, s071, s072, s073, s074, s075,
                                       s076, s077, s078};

const PROGMEM byte pins1[]={9,10,11,12,13,14,15,17,18,0,19,16,2,3,4,5,6,7,8,0};
byte menuptr1=0;
long prev_io=0;
unsigned int passNo=0;
unsigned int stepNo=0;

//void throw_err(int r, int c, int t, int p)

void BootTTLTester()
{
  powerOff();
  prev_io=0;
  passNo=0;
  stepNo=0;
 byte k='o';
  while (k!='s')
  {
    Serial.println("    74  TEST");
    Serial.print("   < ");
    Serial.print(pgm_read_dword_near(chips1+menuptr1));
    Serial.println(" >");
    while (Serial.available()==0);
    k=Serial.read();
    if (k=='a')
    {
        menuptr1--;
        if (menuptr1==255)
            menuptr1=chips1count-1;
    }
    if (k=='d') //forward
    {
        menuptr1++;
        if (menuptr1==chips1count)
            menuptr1=0;
    }
  }

  Serial.println(" RUNNING...");
  if (menuptr1==74)
  {
    powerOn();
    for (byte kk=0;kk<100;kk++)
    {
       test4040();
       passNo++;
    }
    powerOff();
  }

  else
  {
    run_script();
  }
  
  Serial.println(pgm_read_dword_near(chips1+menuptr1));  
  Serial.println("     OK!");
  while(1);
}

void run_script()
{
  powerOn();
  delay(1000); //wait 750ms for power to settle. 
              //a few hundres of ms is needed as we hack power here.
  long * ptr = (long*) pgm_read_word(&script[menuptr1]); //thisisagoodplacetostart
  for (byte i=0;i<100;i++) //repeat test 100 times
  {
    stepNo=0;
    for (unsigned long q=1;q<pgm_read_dword(&ptr[0]);q++)
    {
      stepNo++;
      parse_cmd(pgm_read_dword(&ptr[q]));
    }
    passNo++;
  }
  powerOff();
}

void parse_cmd(long a)
{
 // Serial.println(a);
 // return;
  if ((bitRead(a,0))&&(passNo==0)) //messages 111 - all sw up, 110 - sw4, 101 - sw5.
  {
    if (bitRead(a,1))
      Serial.println("SW4 UP");
    if (bitRead(a,2))
      Serial.println("SW5 UP");
    while (Serial.available()==0);
    Serial.println("RUNNING");
    return;
  }

  //0000 - set i/o. 1 - input TO TESTER.
  if ((!bitRead(a,3)) && (!bitRead(a,2)) && (!bitRead(a,1)))
  {
    prev_io=a;

    for (byte i=4;i<23;i++)
    {
      if (pgm_read_byte_near(pins1+i-4)==0)
        continue;
        
      if (bitRead(a,i)) pinMode(pgm_read_byte_near(pins1+i-4),INPUT_PULLUP);
        else
        {
          pinMode(pgm_read_byte_near(pins1+i-4),OUTPUT);
          digitalWrite(pgm_read_byte_near(pins1+i-4),LOW);
        }
        
    }
    return;  
  }

  //0001 - emit state
  if ((bitRead(a,3)) && (!bitRead(a,2)) && (!bitRead(a,1)))
  {

    for (byte i=4;i<23;i++)
    {
      if (pgm_read_byte_near(pins1+i-4)==0)
        continue;
        
      if ((bitRead(a,i))&&(!bitRead(prev_io,i))) digitalWrite(pgm_read_byte_near(pins1+i-4),HIGH);
      if ((!bitRead(a,i))&&(!bitRead(prev_io,i))) digitalWrite(pgm_read_byte_near(pins1+i-4),LOW);
    }
    return;  
  }

  //0011 - check state
  if ((bitRead(a,3)) && (bitRead(a,2)) && (!bitRead(a,1)))
  {
    for (byte i=4;i<23;i++)
    {
      if (pgm_read_byte_near(pins1+i-4)==0)
        continue;
        
      if ((bitRead(a,i)!=digitalRead(pgm_read_byte_near(pins1+i-4)))&&(bitRead(prev_io,i))) 
      {
        powerOff();
        Serial.println("");
        Serial.print("ERROR! PS");
        Serial.print(passNo);
        Serial.print(" ST");
        Serial.println(stepNo);
        Serial.print("SCKT PIN ");
        Serial.print(i-3);
        Serial.print(" IS ");
        Serial.print(digitalRead(pgm_read_byte_near(pins1+i-4)));
        while (Serial.available()==0);
        byte k=Serial.read();
        if (k=='a')
        {
          BootTTLTester();
        }
      }
    }
    
    return;  
  }
  
}

void err1(byte a)
{
  powerOff();
  Serial.print("ERROR! ");
  Serial.println(a);
  Serial.println("");
  while (1);
}

void test4040()
{
  if (passNo==0)
  {
    Serial.println("SW4 UP");
    while (Serial.available()==0);
  }
    pinMode(9,INPUT_PULLUP);  //1 Q11
    pinMode(10,INPUT_PULLUP); //2 Q5
    pinMode(11,INPUT_PULLUP); //3 Q4
    pinMode(12,INPUT_PULLUP); //4 Q6
    pinMode(13,INPUT_PULLUP);  //5 Q3
    pinMode(14,INPUT_PULLUP); //6 Q2
    pinMode(15,INPUT_PULLUP); //7 Q1, 8 is hardware GND
    
    pinMode(2,INPUT_PULLUP); //9 Q0
    pinMode(3,OUTPUT);        //10 - CLK
    pinMode(4,OUTPUT);       //11 - MR
    pinMode(5,INPUT_PULLUP); //12 Q8
    pinMode(6,INPUT_PULLUP);  //13 Q7
    pinMode(7,INPUT_PULLUP); //14 Q9
    pinMode(8,INPUT_PULLUP); //15 Q10, 16 is hardware Vcc.
    
    digitalWrite(3,LOW);
    digitalWrite(4,LOW);
    digitalWrite(4,HIGH);
    delay(2);
    digitalWrite(4,LOW);  //reset

    if ( (digitalRead(9))||(digitalRead(10))||(digitalRead(11))||(digitalRead(12))||(digitalRead(13))||(digitalRead(14))||(digitalRead(15))||
          (digitalRead(2))||(digitalRead(5))||(digitalRead(6))||(digitalRead(7))||(digitalRead(8)) )
    {
       err1(1);
    }

   digitalWrite(3,HIGH);
   digitalWrite(3,LOW);
   if ( (digitalRead(9))||(digitalRead(10))||(digitalRead(11))||(digitalRead(12))||(digitalRead(13))||(digitalRead(14))||(digitalRead(15))||
      (!digitalRead(2))||(digitalRead(5))||(digitalRead(6))||(digitalRead(7))||(digitalRead(8)) )
   {
     err1(2);
   }

  digitalWrite(3,HIGH);
  digitalWrite(3,LOW);
  if ( (digitalRead(9))||(digitalRead(10))||(digitalRead(11))||(digitalRead(12))||(digitalRead(13))||(digitalRead(14))||(!digitalRead(15))||
      (digitalRead(2))||(digitalRead(5))||(digitalRead(6))||(digitalRead(7))||(digitalRead(8)) )
   {
     err1(3);
   }

    for (int i=0;i<2;i++)
    {
      digitalWrite(3,HIGH);
      digitalWrite(3,LOW);
    }
   if ( (digitalRead(9))||(digitalRead(10))||(digitalRead(11))||(digitalRead(12))||(digitalRead(13))||(!digitalRead(14))||(digitalRead(15))||
      (digitalRead(2))||(digitalRead(5))||(digitalRead(6))||(digitalRead(7))||(digitalRead(8)) )
   {
     err1(4);
   }

    for (int i=0;i<4;i++)
    {
      digitalWrite(3,HIGH);
      digitalWrite(3,LOW);
    }
   if ( (digitalRead(9))||(digitalRead(10))||(digitalRead(11))||(digitalRead(12))||(!digitalRead(13))||(digitalRead(14))||(digitalRead(15))||
      (digitalRead(2))||(digitalRead(5))||(digitalRead(6))||(digitalRead(7))||(digitalRead(8)) )
   {
     err1(5);
   }

    for (int i=0;i<8;i++)
    {
      digitalWrite(3,HIGH);
      digitalWrite(3,LOW);
    }
    
   if ( (digitalRead(9))||(digitalRead(10))||(!digitalRead(11))||(digitalRead(12))||(digitalRead(13))||(digitalRead(14))||(digitalRead(15))||
      (digitalRead(2))||(digitalRead(5))||(digitalRead(6))||(digitalRead(7))||(digitalRead(8)) )
   {
     err1(6);
   }
    
   for (int i=0;i<16;i++)
    {
      digitalWrite(3,HIGH);
      digitalWrite(3,LOW);
    }
   if ( (digitalRead(9))||(!digitalRead(10))||(digitalRead(11))||(digitalRead(12))||(digitalRead(13))||(digitalRead(14))||(digitalRead(15))||
      (digitalRead(2))||(digitalRead(5))||(digitalRead(6))||(digitalRead(7))||(digitalRead(8)) )
   {
     err1(7);
   }
   
   for (int i=0;i<32;i++)
    {
      digitalWrite(3,HIGH);
      digitalWrite(3,LOW);
    }
   if ( (digitalRead(9))||(digitalRead(10))||(digitalRead(11))||(!digitalRead(12))||(digitalRead(13))||(digitalRead(14))||(digitalRead(15))||
      (digitalRead(2))||(digitalRead(5))||(digitalRead(6))||(digitalRead(7))||(digitalRead(8)) )
   {
     err1(8);
   }
   for (int i=0;i<64;i++)
    {
      digitalWrite(3,HIGH);
      digitalWrite(3,LOW);
    }
   if ( (digitalRead(9))||(digitalRead(10))||(digitalRead(11))||(digitalRead(12))||(digitalRead(13))||(digitalRead(14))||(digitalRead(15))||
      (digitalRead(2))||(digitalRead(5))||(!digitalRead(6))||(digitalRead(7))||(digitalRead(8)) )
   {
     err1(9);
   }
   for (int i=0;i<128;i++)
    {
      digitalWrite(3,HIGH);
      digitalWrite(3,LOW);
    }
   if ( (digitalRead(9))||(digitalRead(10))||(digitalRead(11))||(digitalRead(12))||(digitalRead(13))||(digitalRead(14))||(digitalRead(15))||
      (digitalRead(2))||(!digitalRead(5))||(digitalRead(6))||(digitalRead(7))||(digitalRead(8)) )
   {
     err1(10);
   }
   for (int i=0;i<256;i++)
    {
      digitalWrite(3,HIGH);
      digitalWrite(3,LOW);
    }
   if ( (digitalRead(9))||(digitalRead(10))||(digitalRead(11))||(digitalRead(12))||(digitalRead(13))||(digitalRead(14))||(digitalRead(15))||
      (digitalRead(2))||(digitalRead(5))||(digitalRead(6))||(!digitalRead(7))||(digitalRead(8)) )
   {
     err1(11);
   }
      for (int i=0;i<512;i++)
    {
      digitalWrite(3,HIGH);
      digitalWrite(3,LOW);
    }
   if ( (digitalRead(9))||(digitalRead(10))||(digitalRead(11))||(digitalRead(12))||(digitalRead(13))||(digitalRead(14))||(digitalRead(15))||
      (digitalRead(2))||(digitalRead(5))||(digitalRead(6))||(digitalRead(7))||(!digitalRead(8)) )
   {
     err1(12);
   }
   for (int i=0;i<1024;i++)
    {
      digitalWrite(3,HIGH);
      digitalWrite(3,LOW);
    }
   if ( (!digitalRead(9))||(digitalRead(10))||(digitalRead(11))||(digitalRead(12))||(digitalRead(13))||(digitalRead(14))||(digitalRead(15))||
      (digitalRead(2))||(digitalRead(5))||(digitalRead(6))||(digitalRead(7))||(digitalRead(8)) )
   {
     err1(13);
   } 
   digitalWrite(4,HIGH);
   digitalWrite(4,LOW);
   
   if ( (digitalRead(9))||(digitalRead(10))||(digitalRead(11))||(digitalRead(12))||(digitalRead(13))||(digitalRead(14))||(digitalRead(15))||
      (digitalRead(2))||(digitalRead(5))||(digitalRead(6))||(digitalRead(7))||(digitalRead(8)) )
   {
     err1(14);
   } 
}
